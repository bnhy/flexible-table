{
  "version": 3,
  "file": "flexible-table.umd.min.js",
  "sources": [
    "ng://flexible-table/out/src/app/flexible-table/table.pagination.component.ts",
    "ng://flexible-table/out/src/app/flexible-table/flexible.table.component.ts",
    "ng://flexible-table/out/src/app/flexible-table/flexible-table-module.ts"
  ],
  "sourcesContent": [
    "/*\r\n* Provides pagination of a data set in a table.\r\n*/\r\nimport {\r\n\tComponent,\r\n\tComponentFactory,\r\n\tReflectiveInjector,\r\n\tViewContainerRef,\r\n\tInput,\r\n\tOutput,\r\n\tHostListener,\r\n    EventEmitter,\r\n    OnInit,\r\n\tViewChild,\r\n\tElementRef} from \"@angular/core\";\r\n\r\nexport interface PaginationInfo {\r\n\tcontentSize: number,\r\n\tpageSize: number,\r\n    maxWidth?: string,\r\n\tpages?: number,\r\n\tfrom?: number,\r\n\tto?: number,\r\n\tcurrentPage?: number,\r\n    resetSize?: boolean\r\n}\r\n\r\n@Component({\r\n    selector: 'table-pagination',\r\n\ttemplate: `<div *ngIf=\"info && info.pages > 1\" [style.width]=\"info.maxWidth\" class=\"table-pagination\" #paginationWrapper>\r\n    <div class=\"fa fa-angle-left\"\r\n         (click)=\"selectPrev()\"\r\n         [class.disabled]=\"info.currentPage==1\">\r\n        <span class=\"prev\" [textContent]=\"vocabulary.previousPage\"></span>\r\n    </div>\r\n    <div class=\"fa fa-angle-double-left\"\r\n         (click)=\"selectFirst()\"\r\n         [class.disabled]=\"info.currentPage==1\">\r\n        <span class=\"first\" [textContent]=\"vocabulary.firstPage\"></span>\r\n    </div>\r\n    <div class=\"current\">\r\n        <input  #ranger [value]=\"info.currentPage\" (keydown.Enter)=\"changeCurrent(ranger)\" />\r\n        <span [textContent]=\"' / ' + info.pages\"></span>\r\n\t</div>\r\n    <div class=\"fa fa-angle-double-right\"\r\n         (click)=\"selectLast()\"\r\n         [class.disabled]=\"info.currentPage==info.pages\">\r\n        <span class=\"last\" [textContent]=\"vocabulary.lastPage\"></span>\r\n    </div>\r\n    <div class=\"fa fa-angle-right\"\r\n         (click)=\"selectNext()\"\r\n         [class.disabled]=\"info.currentPage==info.pages\">\r\n        <span class=\"next\" [textContent]=\"vocabulary.nextPage\"></span>\r\n    </div>\r\n    <div class=\"reset-size\" *ngIf=\"info.resetSize\">\r\n        <label for=\"pagination-set-size\">\r\n            <span class=\"off-screen\" [textContent]=\"vocabulary.setSize\"></span>\r\n            <input id=\"pagination-set-size\" [value]=\"info.pageSize\" (keydown.Enter)=\"changeSize(sizer)\" #sizer />\r\n        </label>\r\n    </div>\r\n</div>\r\n`,\r\n\tstyles: [`.table-pagination{-webkit-box-sizing:border-box;box-sizing:border-box;background-color:#fff;border:1px solid #254a5d;border-radius:2px;color:#254a5d;bottom:5px;clear:both;display:-webkit-box;display:-ms-flexbox;display:flex;font-size:1em;height:38px;max-width:100%;margin:0 auto;position:fixed;left:40%;z-index:55}.table-pagination .fa{padding:4px 8px;margin-top:5px}.table-pagination .first,.table-pagination .last,.table-pagination .next,.table-pagination .prev{background-repeat:no-repeat;cursor:pointer;width:auto;display:block;height:39px;text-indent:-99999px;-webkit-box-sizing:border-box;box-sizing:border-box}.table-pagination .reset-size{padding:0;height:35px;border-radius:4px}.table-pagination .reset-size input{border:0;border-left:1px solid #4c5854;height:34px;text-align:center;width:30px;margin-right:2px;margin-left:8px}.table-pagination .current{padding:1px 5px}.table-pagination .current input{padding:0 3px;width:14px;height:35px;border:none;text-align:center}.table-pagination .disabled{opacity:.4}@media screen and (max-width:992px){.table-pagination{left:4px}}`]\r\n})\r\nexport class TablePaginationComponent implements OnInit {\r\n    @ViewChild('paginationWrapper') private pager: TablePaginationComponent;\r\n\t@ViewChild('paginationWrapper', {read: ViewContainerRef}) private root: ViewContainerRef;\r\n\r\n    @Input(\"vocabulary\")\r\n    public vocabulary = {setSize: \"\", firstPage: \"\", lastPage: \"\", previousPage: \"\"};\r\n\r\n    @Input(\"info\")\r\n    info: PaginationInfo = { contentSize: 0, pageSize: 0, maxWidth: \"0\" };\r\n\r\n\t@Output('onchange')\r\n    onchange = new EventEmitter();\r\n\r\n    @Output('onready')\r\n    onready = new EventEmitter();\r\n\r\n\tprivate el: HTMLElement;\r\n\r\n\tconstructor(el: ElementRef) {\r\n\t\tthis.el = el.nativeElement;\r\n    }\r\n\r\n\tngOnInit() {\r\n\t\tif (!this.info) {\r\n\t\t\tthis.info = { contentSize: 1000, pageSize: 1000, maxWidth: \"0\" };\r\n\t\t}\r\n\t\tif (this.info.contentSize && this.info.pageSize) {\r\n\t\t\tthis.info.pages = Math.ceil(this.info.contentSize / this.info.pageSize);\r\n\t\t\tthis.info.from = 0;\r\n\t\t\tthis.info.to = this.info.pageSize - 1;\r\n\t\t\tthis.info.currentPage = 1;\r\n\t\t    setTimeout(() => this.ready(), 66);\r\n\t\t}\r\n    }\r\n\r\n    public setWidth(width: number) {\r\n        this.info.maxWidth = width + \"px\";\r\n    }\r\n\r\n    ready() {\r\n        this.onready.emit(this);\r\n        this.onchange.emit(this.info);\r\n    }\r\n\r\n    selectFirst() {\r\n        if (this.info.currentPage > 1) {\r\n\t\t    this.info.from = 0;\r\n\t\t    this.info.to = this.info.from + this.info.pageSize - 1;\r\n\t\t    this.info.currentPage = 1;\r\n            this.onchange.emit(this.info);\r\n        }\r\n   }\r\n\r\n   selectNext() {\r\n        if (this.info.currentPage < this.info.pages) {\r\n \t\tthis.info.from = this.info.to + 1;\r\n\t\tthis.info.to = this.info.from + this.info.pageSize - 1;\r\n\t\tthis.info.currentPage++;\r\n        this.onchange.emit(this.info);\r\n        }\r\n    }\r\n\r\n    selectPrev() {\r\n        if (this.info.currentPage > 1) {\r\n \t\t    this.info.from -= this.info.pageSize;\r\n\t\t    this.info.to = this.info.from + this.info.pageSize - 1;\r\n\t\t    this.info.currentPage--;\r\n            this.onchange.emit(this.info);\r\n        }\r\n    }\r\n\r\n    selectLast() {\r\n        if (this.info.currentPage < this.info.pages) {\r\n\t\t    this.info.from = this.info.pageSize * (this.info.pages - 1);\r\n\t\t    this.info.to = this.info.from + this.info.pageSize - 1;\r\n\t\t    this.info.currentPage = this.info.pages;\r\n            this.onchange.emit(this.info);\r\n        }\r\n    }\r\n\r\n    changeCurrent(ranger: any) {\r\n        const v = parseInt( ranger.value, 10 );\r\n        if (this.info.currentPage < v && v > 0 && v < this.info.pages) {\r\n\t\t    this.info.from = v * (this.info.pageSize - 1);\r\n\t\t    this.info.to = this.info.from + this.info.pageSize - 1;\r\n\t\t    this.info.currentPage = v;\r\n            this.onchange.emit(this.info);\r\n        } else {\r\n            ranger.value = this.info.currentPage;\r\n        }\r\n    }\r\n\r\n    changeSize(sizer: any) {\r\n        const v = parseInt( sizer.value, 10 );\r\n        if (this.info.contentSize >= v && v > 1) {\r\n            this.info.pageSize = v;\r\n \t\t\tthis.info.pages = Math.ceil(this.info.contentSize / v);\r\n            this.info.from = 0;\r\n\t\t\tthis.info.to = this.info.pageSize - 1;\r\n\t\t\tthis.info.currentPage = 1;\r\n            this.onchange.emit(this.info);\r\n        } else {\r\n            sizer.value = this.info.pageSize;\r\n        }\r\n    }\r\n}\r\n",
    "/*\r\n* Provides rendering of a table which is using the given FlexibleTableHeader set in\r\n* order to tabulate the given data. As per definition of earch header component,\r\n* a column could be hidden, sortable, or draggable. Each table row can expand/collapse\r\n* or respond to a click action.\r\n*/\r\nimport {\r\n    Component,\r\n\tInput,\r\n\tOutput,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tOnChanges,\r\n\tOnInit,\r\n\tOnDestroy,\r\n\tEventEmitter\r\n} from '@angular/core';\r\n\r\nimport {InToPipe} from 'into-pipes';\r\n\r\nimport { DropEvent } from 'drag-enabled';\r\nimport {TablePaginationComponent} from './table.pagination.component';\r\n\r\nexport interface FlexibleTableHeader {\r\n\tkey: string,\r\n\tvalue: string,\r\n\tpresent: boolean,\r\n\twidth?: string,\r\n\tformat?: string,\r\n\tdragable?: boolean\r\n\tsortable?: boolean,\r\n\tascending?: boolean,\r\n\tdescending?: boolean\r\n}\r\n\r\n@Component({\r\n\tselector: 'flexible-table',\r\n\ttemplate: `\r\n<div class=\"flexible-table\">\r\n    <div class=\"confinguration\" *ngIf=\"configurable\">\r\n        <div class=\"shim\"\r\n            [style.display]=\"showConfigurationView ? 'block':'none'\"\r\n            (click)=\"toggleConfigurationView()\"></div>\r\n        <a #conf\r\n            [attr.tabindex]=\"0\"\r\n            (keydown)=\"keydown($event, conf)\"\r\n            (click)=\"toggleConfigurationView()\">\r\n            <span class=\"icon fa fa-gear\" aria-hidden=\"true\"></span>\r\n            <span class=\"off-screen\" [textContent]=\"vocabulary.configureTable\"></span>\r\n        </a>\r\n        <ul role=\"list\" [style.display]=\"showConfigurationView ? 'block':'none'\">\r\n            <p [textContent]=\"vocabulary.configureColumns\"></p>\r\n            <li  *ngFor=\"let header of headers\" role=\"listitem\">\r\n                <label for=\"{{header.key ? header.key+'c':'c'}}\">\r\n                    <input type=\"checkbox\" #checkbox\r\n                           [id]=\"header.key ? header.key+'c':'c'\"\r\n                           [value]=\"header.key\"\r\n                           [checked]=\"header.present\"\r\n                           (click)=\"reconfigure(checkbox)\" />\r\n                    <span [textContent]=\"header.value\"></span>\r\n                </label>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <table [class]=\"tableClass\" #flexible>\r\n        <caption *ngIf=\"caption\" [textContent]=\"caption\"></caption>\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\" *ngIf=\"enableIndexing\" id=\"indexable\" class=\"indexable\"></th>\r\n                <ng-template ngFor let-header [ngForOf]=\"headers\">\r\n                    <th scope=\"col\" *ngIf=\"header.present\"\r\n                        [dragEnabled]=\"dragEnabled.bind(this)\"\r\n                        [dropEnabled]=\"dropEnabled.bind(this)\"\r\n                        [medium]=\"header\"\r\n                        (onDragStart)=\"onDragStart($event)\"\r\n                        (onDragEnd)=\"onDragEnd($event)\"\r\n                        (onDrop)=\"onDrop($event)\"\r\n                        [id]=\"header.key\"\r\n                        [attr.width]=\"header.width ? header.width : null\" \r\n                        [attr.tabindex]=\"header.sortable ? 0 : -1\"\r\n\t\t\t\t\t\t(keydown)=\"keydown($event, th)\" (click)=\"sort(header, icon)\">\r\n                        <span *ngIf=\"header.sortable\" class=\"off-screen\"  [textContent]=\"vocabulary.clickSort\"></span>\r\n                        <span class=\"title\"\r\n                              [class.dragable]=\"header.dragable\"\r\n                              [textContent]=\"header.value\"></span>\r\n                        <span class=\"icon fa\" #icon\r\n                              [class.fa-sort]=\"header.sortable\"\r\n                              [class.fa-sort-asc]=\"header.assending\"\r\n                              [class.fa-sort-desc]=\"header.desending\"></span>\r\n                    </th>\r\n                </ng-template>\r\n                <th scope=\"col\" *ngIf=\"action\" id=\"actionable\" class=\"actionable\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\">\r\n                <tr *ngIf=\"(!pager || (pager && pager.info && i>=pager.info.from && i<=pager.info.to))\"\r\n                    (click)=\"actionClick($event, item)\"\r\n                    [class.pointer]=\"action\"\r\n                    [class.expanded]=\"item.expanded\"\r\n                    [class.odd]=\"i%2\">\r\n                    <td scope=\"row\" class=\"index\" *ngIf=\"enableIndexing\">{{i + 1}}</td>\r\n                    <ng-template ngFor let-header [ngForOf]=\"headers\">\r\n                        <td scope=\"row\" \r\n                            *ngIf=\"header.present\" \r\n                            [attr.data-label]=\"header.value\" \r\n                            [innerHTML]=\"cellContent(item, header)\"></td>\r\n                    </ng-template>\r\n                    <td scope=\"row\" *ngIf=\"action\">\r\n                        <a class=\"actionable\"\r\n                            *ngIf=\"expandable(item, true)\"\r\n                            tabindex=\"0\"\r\n                            role=\"button\"\r\n                            style=\"cursor:pointer\"\r\n                            [class.expanded]=\"item.expanded\" #clicker\r\n                            (keydown)=\"keydown($event, clicker)\" (click)=\"actionClick($event, item)\">\r\n                            <span\r\n                                class=\"icon fa\"\r\n                                [class.fa-angle-right]=\"!rowDetailer\"\r\n                                [class.fa-minus-square-o]=\"rowDetailer && item.expanded\"\r\n                                [class.fa-plus-square-o]=\"rowDetailer && !item.expanded\"\r\n                                aria-hidden=\"true\"></span>\r\n                            <span class=\"off-screen\" [textContent]=\"offScreenMessage(item)\"></span>\r\n                        </a>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"(!pager || (pager && pager.info && i>=pager.info.from && i<=pager.info.to)) && rowDetailer && item.expanded\" class=\"detail\" [class.odd]=\"i%2\">\r\n                    <td scope=\"row\" class=\"index\" *ngIf=\"enableIndexing\"></td>\r\n                    <td [attr.colspan]=\"columnsCount()\">\r\n                        <ng-container [ngTemplateOutlet]=\"rowDetailer\" [ngTemplateOutletContext]=\"rowDetailerContext(item)\"></ng-container>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n<table-pagination [info]=\"pageInfo\" [vocabulary]=\"vocabulary\" #pager></table-pagination>\r\n`,\r\n\tstyles: [`:host{display:inline-block!important;width:100%}.flexible-table{position:relative;margin:0 auto;display:table;border-spacing:0;border-collapse:collapse}.flexible-table .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.flexible-table table{margin:1rem auto;padding:0;width:100%;table-layout:fixed;max-width:99%;background-color:transparent;border-collapse:collapse}.flexible-table table caption{background-color:#c3e5e2;border-radius:2px;color:#1b1b1b;caption-side:top;font-size:14px;padding:5px 6px;margin-bottom:15px;text-align:left}.flexible-table table thead{border-top:1px solid #bbb;border-bottom:1px solid #bbb;background-color:#eee}.flexible-table table tr{border:0}.flexible-table table tr.expanded td{font-weight:700;border-bottom:0}.flexible-table table td{padding-left:3px}.flexible-table table td:first-child{padding-left:5px}.flexible-table table td .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.flexible-table table td.index{background-color:#eee;border-right:1px solid #bbb}.flexible-table table th{cursor:default;-webkit-user-select:none;-moz-user-select:none;-o-user-select:none;-ms-user-select:none;user-select:none;height:24px;position:relative;white-space:nowrap;font-weight:400;text-transform:uppercase;font-size:14px;padding-top:6px;padding-bottom:6px;text-align:left}.flexible-table table th.drag-over{background-color:#9b9b9b}.flexible-table table th.drag-over .icon,.flexible-table table th.drag-over .title{color:#eee}.flexible-table table th:first-child{padding-left:5px}.flexible-table table th.ascending,.flexible-table table th.descending,.flexible-table table th.sortable{cursor:pointer;height:12px}.flexible-table table th.indexable{width:33px}.flexible-table table th.actionable{width:24px}.flexible-table table th .title{color:#254a4d;display:inline-block;height:20px;white-space:nowrap}.flexible-table table th .dragable{cursor:move}.flexible-table table th .icon{width:22px;display:inline-block;height:20px;color:#254a4d}.flexible-table .fa.fa-angle-right{font-size:18px}.flexible-table table tr.detail td{border-top:0;cursor:default}.flexible-table table tr.expanded td a.expanded{background-position:right 2px}.flexible-table table tbody tr:hover{background-color:#ffeed2}.flexible-table table tbody tr.detail:hover,.flexible-table table tbody tr.detail:hover td table thead tr{background-color:inherit}.flexible-table table tr td a.actionable{display:inline-table;height:32px;vertical-align:middle;width:25px;line-height:30px;color:#254a4d}.flexible-table table tbody tr.detail:hover td:last-child{border-right:0}.flexible-table table tbody tr.detail:hover td:first-child{border-left:0}.flexible-table table tr td{border-bottom:1px solid #b1b3b3;color:#254a5d;font-size:15px;text-transform:capitalize}.flexible-table table tbody tr.pointer{cursor:pointer}.flexible-table table.alert-danger{border:0}.flexible-table table.alert-danger caption{background-color:transparent;font-weight:700;margin-bottom:0}.flexible-table table.alert-danger td{border-bottom:0;display:block}.flexible-table table.alert-danger td:first-child{padding-left:0}.flexible-table table.alert-danger td:last-child{border-bottom:0}.flexible-table table.alert-danger td:before{content:attr(data-label);float:left;font-weight:700;text-transform:uppercase;width:20%}.flexible-table table.alert-danger td a span.icon{width:100%}.flexible-table table.alert-danger thead{border:none;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.flexible-table table.alert-danger tr{border:2px solid #fff;display:block;margin-bottom:.625em;padding:5px;border-radius:5px}.flexible-table table.alert-danger tr th.actionable{width:inherit}.flexible-table table.alert-danger tr td{border-bottom:0}@media screen and (max-width:600px){.flexible-table table{border:0}.flexible-table table td{border-bottom:0;display:block;text-align:right}.flexible-table table td:first-child{padding-left:0}.flexible-table table td:last-child{border-bottom:0}.flexible-table table td:before{content:attr(data-label);float:left;font-weight:700;text-transform:uppercase}.flexible-table table td a span.icon{width:100%}.flexible-table table thead{border:none;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.flexible-table table tr{border-bottom:3px solid #ddd;display:block;margin-bottom:.625em}.flexible-table table tr th.actionable{width:inherit}.flexible-table table tr td{border-bottom:0}.flexible-table table.alert-danger td:before{width:inherit}}.flexible-table .confinguration{-webkit-box-sizing:border-box;box-sizing:border-box;padding:2px;position:absolute;right:8px;top:18px}.flexible-table .confinguration a{display:block;padding:0;cursor:pointer;z-index:5}.flexible-table .confinguration a .icon{color:#00925b}.flexible-table .confinguration a .off-screen{display:block;text-indent:-9999px;width:0;height:0;overflow:hidden}.flexible-table .confinguration .shim{background-color:rgba(255,255,255,.2);width:100vw;height:100vh;position:fixed;top:0;left:0;z-index:2}.flexible-table .confinguration ul{background-color:#fff;border:1px solid #999;border-radius:4px;display:block;list-style:none;max-height:300px;margin:2px 0;min-width:200px;overflow-y:auto;position:absolute;padding:15px;right:0;-webkit-box-shadow:6px 8px 6px -6px #1b1b1b;box-shadow:6px 8px 6px -6px #1b1b1b;z-index:5}.flexible-table .confinguration ul li{white-space:nowrap}`]\r\n})\r\nexport class FlexibleTableComponent implements OnInit, OnChanges, OnDestroy {\r\n\tprivate registeredHeaders = [];\r\n    showConfigurationView = false;\r\n    dragging = false;\r\n\r\n    @Input(\"vocabulary\")\r\n    public vocabulary = {\r\n\t\tconfigureTable: \"Configure Table\",\r\n\t\tconfigureColumns: \"Configure Columns\",\r\n\t\tclickSort: \"Click to Sort\",\r\n\t\tsetSize: \"Set Size\",\r\n\t\tfirstPage: \"First\",\r\n\t\tlastPage: \"Last\",\r\n\t\tpreviousPage: \"Previous\"\r\n\t};\r\n\r\n    @Input(\"caption\")\r\n    public caption: string;\r\n\r\n    @Input(\"action\")\r\n    public action: string;\r\n\r\n    @Input(\"actionKeys\")\r\n    public actionKeys;\r\n\r\n    @Input(\"tableClass\")\r\n    public tableClass = 'default-flexible-table';\r\n\r\n\t@Input(\"headers\")\r\n\tpublic headers: any[];\r\n\r\n\t@Input(\"items\")\r\n\tpublic items: any[];\r\n\r\n\t@Input(\"pageInfo\")\r\n\tpublic pageInfo: any;\r\n\r\n\t@Input(\"tableInfo\")\r\n\tpublic tableInfo: any;\r\n\r\n    @Input(\"configurable\")\r\n    public configurable: boolean;\r\n\r\n    @Input(\"enableIndexing\")\r\n    public enableIndexing: boolean;\r\n\r\n    @Input(\"rowDetailer\")\r\n    public rowDetailer: any;\r\n\r\n    @Input(\"expandable\")\r\n    public expandable: any;\r\n\r\n    @Input(\"expandIf\")\r\n    public expandIf: boolean;\r\n\r\n    @Input(\"rowDetailerHeaders\")\r\n    public rowDetailerHeaders: any;\r\n\r\n\t@Output('onaction')\r\n\tprivate onaction = new EventEmitter();\r\n\r\n\t@Output('onconfigurationchange')\r\n\tprivate onconfigurationchange = new EventEmitter();\r\n\r\n\t@ViewChild('flexible', {read: ViewContainerRef}) private table: ViewContainerRef;\r\n    @ViewChild('pager') private pager: TablePaginationComponent;\r\n\r\n    constructor(private intoPipe: InToPipe) {}\r\n\r\n\r\n\tprivate findColumnWithID(id: string) {\r\n        const list = this.headerColumnElements();\r\n\t\tlet column = null;\r\n\t\tfor (let i = 0; i < list.length; i++) {\r\n\t\t\tif (list[i].getAttribute(\"id\") === id) {\r\n\t\t\t\tcolumn = list[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn column;\r\n\t}\r\n\r\n\tprivate swapColumns(sourceID: string, destinationID: string) {\r\n\t\tconst srcIndex = this.getColumnIndex(sourceID);\r\n\t\tconst desIndex = this.getColumnIndex(destinationID);\r\n        if (srcIndex < 0 || desIndex < 0) {\r\n            console.log(\"invalid drop id\", sourceID, destinationID);\r\n            return;\r\n        }\r\n\t\tconst sobj = this.headers[srcIndex];\r\n\t\tthis.headers[srcIndex] = this.headers[desIndex];\r\n        this.headers[desIndex] = sobj;\r\n\r\n\t\tfor (let i = 0; i < this.items.length; i++) {\r\n\t\t\tconst row = this.items[i];\r\n\t\t\tconst sobji = row[srcIndex];\r\n\t\t\trow[srcIndex] = row[desIndex];\r\n\t\t\trow[desIndex] = sobji;\r\n\t\t}\r\n\t\tthis.onconfigurationchange.emit(this.headers);\r\n\t}\r\n\r\n\tprivate getColumnIndex(id: string) {\r\n\t\tlet index = -1;\r\n\t\tfor (let i = 0; i < this.headers.length; i++) {\r\n\t\t\tif (this.headers[i].key === id) {\r\n\t\t\t\tindex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\tprivate itemValue(item, hpath) {\r\n\t\tlet subitem = item;\r\n\t\thpath.map( (subkey) => {\r\n\t\t\tif (subitem) {\r\n\t\t\t\tsubitem = subitem[subkey] ? subitem[subkey] : undefined;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn subitem ? subitem : \"\";\r\n\t}\r\n\r\n\tprivate sort(header: FlexibleTableHeader, icon) {\r\n\t\tif (header.sortable) {\r\n\t\t\tfor (let i = 0; i < this.headers.length ; i++) {\r\n                const h = this.headers[i];\r\n\r\n                if (h.key !== header.key) {\r\n\t\t\t\t\tconst item = this.findColumnWithID(h.key);\r\n\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\titem.classList.remove(\"ascending\");\r\n\t\t\t\t\t\titem.classList.remove(\"descending\");\r\n\t\t\t\t\t\titem.classList.add(\"sortable\");\r\n\t\t\t\t\t}\r\n                    h.descending = false;\r\n                    h.ascending = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n            icon.classList.remove(\"fa-sort\");\r\n\t\t\tif (header.ascending || (!header.ascending && !header.descending)) {\r\n\t\t\t\theader.descending = true;\r\n\t\t\t\theader.ascending = false;\r\n\t\t\t\ticon.classList.remove(\"fa-sort-asc\");\r\n\t\t\t\ticon.classList.add(\"fa-sort-desc\");\r\n\t\t\t} else {\r\n\t\t\t\theader.descending = false;\r\n\t\t\t\theader.ascending = true;\r\n\t\t\t\ticon.classList.remove(\"fa-sort-desc\");\r\n\t\t\t\ticon.classList.add(\"fa-sort-asc\");\r\n\t\t\t}\r\n\t\t\tconst hpath = header.key.split(\".\");\r\n\t\t\tthis.items.sort((a, b) => {\r\n\t\t\t\tconst v1 = this.itemValue(a, hpath);\r\n\t\t\t\tconst v2 = this.itemValue(b, hpath);\r\n\r\n\t\t\t\tif (header.ascending) {\r\n\t\t\t\t\treturn v1 > v2 ? 1 : -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn v1 < v2 ? 1 : -1;\r\n\t\t\t});\r\n\t\t\tsetTimeout( () => this.onconfigurationchange.emit(this.headers), 2);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tif (!this.headers || this.headers.length === 0) {\r\n\t\t\tthis.headers = [];\r\n            this.items[0].map((item) => {\r\n                this.headers.push({ key: item, value: item, sortable: true, present: true });\r\n           });\r\n        }\r\n        if (this.actionKeys) {\r\n            this.actionKeys = this.actionKeys.split(\",\");\r\n\t\t}\r\n\t\tif (!this.rowDetailer && this.expandable) {\r\n\t\t\tthis.rowDetailer = function(item) {\r\n\t\t\t\treturn {data: item, headers: []};\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (!this.expandable) {\r\n\t\t\tthis.expandable = function(item, showIcon) {return showIcon};\r\n\t\t}\r\n\t\tif (!this.rowDetailerHeaders) {\r\n\t\t\tthis.rowDetailerHeaders = (item) => [];\r\n\t\t}\r\n\t}\r\n\r\n\tngOnChanges(changes: any) {\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t}\r\n\r\n\ttoggleConfigurationView() {\r\n\t\tthis.showConfigurationView = !this.showConfigurationView;\r\n\t}\r\n\r\n\treconfigure(item) {\r\n        this.headerById(item.value).present = item.checked;\r\n\t\tthis.onconfigurationchange.emit(this.headers);\r\n\t}\r\n\r\n    headerColumnElements() {\r\n\t\treturn this.table.element.nativeElement.children ?\r\n\t\t\t\tthis.table.element.nativeElement.children[1].children[0].children : [];\r\n    }\r\n\r\n\theaderById(id) {\r\n\t\tlet h;\r\n\t\tfor (const i in this.headers) {\r\n\t\t\tif (this.headers[i].key === id) {\r\n\t\t\t\th = this.headers[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n    columnsCount() {\r\n\t\tlet count = 0;\r\n\t\tthis.headers.map( (item) => {\r\n            if (item.present) {\r\n                count++;\r\n            }\r\n\t\t});\r\n        if (this.action) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    keydown(event, item) {\r\n        const code = event.which;\r\n        if ((code === 13) || (code === 32)) {\r\n\t\t\titem.click();\r\n\t\t}\r\n    }\r\n    offScreenMessage(item) {\r\n        let message: string = this.action;\r\n        this.actionKeys.map((key) => { message = message.replace(key, item[key.substring(1, key.length - 1)]); })\r\n        return message;\r\n    }\r\n\r\n    cellContent(item, header) {\r\n\t\tlet content = this.itemValue(item, header.key.split(\".\"));\r\n\r\n\t\tif (header.format && content !== undefined && content != null) {\r\n            content = this.intoPipe.transform(content, header.format);\r\n        }\r\n        return (content !== undefined && content != null) ? content : '&nbsp;';\r\n\t}\r\n\r\n\trowDetailerContext(item) {\r\n\t\treturn {\r\n\t\t\tdata: item,\r\n\t\t\ttableInfo: this.tableInfo,\r\n\t\t\theaders: this.rowDetailerHeaders(item)\r\n\t\t};\r\n\t}\r\n\r\n\tactionClick(event, item: any) {\r\n\t\tevent.stopPropagation();\r\n        if (this.rowDetailer && (this.expandIf || this.expandable(item, false)) ) {\r\n            if (item.expanded) {\r\n                delete item.expanded;\r\n            } else {\r\n                item.expanded = true;\r\n            }\r\n        } else {\r\n            this.onaction.emit(item);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tdragEnabled(medium: FlexibleTableHeader) {\r\n\t\treturn medium.dragable;\r\n\t}\r\n\tdropEnabled(event: DropEvent) {\r\n\t\treturn event.destination.dragable;\r\n\t}\r\n\tonDragStart(event){\r\n//        this.dragging = true;\r\n\t}\r\n\tonDragEnd(event){\r\n //       this.dragging = false;\r\n\t}\r\n\tonDrop(event:DropEvent){\r\n\t\tthis.swapColumns(event.source.key, event.destination.key);\r\n\t}\r\n}\r\n",
    "/*\r\n* Provides rendering of flexible table in a lazy load fashion.\r\n*/\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule, DatePipe, CurrencyPipe, DecimalPipe, JsonPipe, SlicePipe, UpperCasePipe, LowerCasePipe } from '@angular/common';\r\nimport {IntoPipeModule} from 'into-pipes';\r\nimport { DragDropModule } from 'drag-enabled';\r\n\r\nimport { TablePaginationComponent } from './table.pagination.component';\r\nimport { FlexibleTableComponent } from './flexible.table.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        DragDropModule,\r\n        IntoPipeModule\r\n    ],\r\n    declarations: [\r\n        FlexibleTableComponent,\r\n        TablePaginationComponent\r\n    ],\r\n    exports: [\r\n        FlexibleTableComponent,\r\n        TablePaginationComponent\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n    providers: [\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class FlexibleTableModule {}\r\n"
  ],
  "names": [
    "TablePaginationComponent",
    "el",
    "this",
    "vocabulary",
    "setSize",
    "firstPage",
    "lastPage",
    "previousPage",
    "info",
    "contentSize",
    "pageSize",
    "maxWidth",
    "onchange",
    "EventEmitter",
    "onready",
    "nativeElement",
    "prototype",
    "ngOnInit",
    "_this",
    "pages",
    "Math",
    "ceil",
    "from",
    "to",
    "currentPage",
    "setTimeout",
    "ready",
    "setWidth",
    "width",
    "emit",
    "selectFirst",
    "selectNext",
    "selectPrev",
    "selectLast",
    "changeCurrent",
    "ranger",
    "v",
    "parseInt",
    "value",
    "changeSize",
    "sizer",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "ElementRef",
    "pager",
    "ViewChild",
    "root",
    "read",
    "ViewContainerRef",
    "Input",
    "Output",
    "FlexibleTableComponent",
    "intoPipe",
    "registeredHeaders",
    "showConfigurationView",
    "dragging",
    "configureTable",
    "configureColumns",
    "clickSort",
    "tableClass",
    "onaction",
    "onconfigurationchange",
    "findColumnWithID",
    "id",
    "list",
    "headerColumnElements",
    "column",
    "i",
    "length",
    "getAttribute",
    "swapColumns",
    "sourceID",
    "destinationID",
    "srcIndex",
    "getColumnIndex",
    "desIndex",
    "console",
    "log",
    "sobj",
    "headers",
    "items",
    "row",
    "sobji",
    "index",
    "key",
    "itemValue",
    "item",
    "hpath",
    "subitem",
    "map",
    "subkey",
    "undefined",
    "sort",
    "header",
    "icon",
    "sortable",
    "h",
    "classList",
    "remove",
    "add",
    "descending",
    "ascending",
    "hpath_1",
    "split",
    "a",
    "b",
    "v1",
    "v2",
    "push",
    "present",
    "actionKeys",
    "rowDetailer",
    "expandable",
    "data",
    "showIcon",
    "rowDetailerHeaders",
    "ngOnChanges",
    "changes",
    "ngOnDestroy",
    "toggleConfigurationView",
    "reconfigure",
    "headerById",
    "checked",
    "table",
    "element",
    "children",
    "columnsCount",
    "count",
    "action",
    "keydown",
    "event",
    "code",
    "which",
    "click",
    "offScreenMessage",
    "message",
    "replace",
    "substring",
    "cellContent",
    "content",
    "format",
    "transform",
    "rowDetailerContext",
    "tableInfo",
    "actionClick",
    "stopPropagation",
    "expandIf",
    "expanded",
    "dragEnabled",
    "medium",
    "dragable",
    "dropEnabled",
    "destination",
    "onDragStart",
    "onDragEnd",
    "onDrop",
    "source",
    "InToPipe",
    "caption",
    "pageInfo",
    "configurable",
    "enableIndexing",
    "FlexibleTableModule",
    "NgModule",
    "imports",
    "CommonModule",
    "DragDropModule",
    "IntoPipeModule",
    "declarations",
    "exports",
    "entryComponents",
    "providers",
    "schemas",
    "CUSTOM_ELEMENTS_SCHEMA"
  ],
  "mappings": "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"
}
